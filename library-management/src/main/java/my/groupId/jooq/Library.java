/*
 * This file is generated by jOOQ.
 */
package my.groupId.jooq;


import java.util.Arrays;
import java.util.List;

import my.groupId.jooq.tables.Admin;
import my.groupId.jooq.tables.Author;
import my.groupId.jooq.tables.Book;
import my.groupId.jooq.tables.Category;
import my.groupId.jooq.tables.FlywaySchemaHistory;
import my.groupId.jooq.tables.Publisher;
import my.groupId.jooq.tables.Rent;
import my.groupId.jooq.tables.Setting;
import my.groupId.jooq.tables.Users;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Library extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>library</code>
     */
    public static final Library LIBRARY = new Library();

    /**
     * The table <code>library.admin</code>.
     */
    public final Admin ADMIN = Admin.ADMIN;

    /**
     * The table <code>library.author</code>.
     */
    public final Author AUTHOR = Author.AUTHOR;

    /**
     * The table <code>library.book</code>.
     */
    public final Book BOOK = Book.BOOK;

    /**
     * The table <code>library.category</code>.
     */
    public final Category CATEGORY = Category.CATEGORY;

    /**
     * The table <code>library.flyway_schema_history</code>.
     */
    public final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * The table <code>library.publisher</code>.
     */
    public final Publisher PUBLISHER = Publisher.PUBLISHER;

    /**
     * The table <code>library.rent</code>.
     */
    public final Rent RENT = Rent.RENT;

    /**
     * The table <code>library.setting</code>.
     */
    public final Setting SETTING = Setting.SETTING;

    /**
     * The table <code>library.users</code>.
     */
    public final Users USERS = Users.USERS;

    /**
     * No further instances allowed
     */
    private Library() {
        super("library", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Admin.ADMIN,
            Author.AUTHOR,
            Book.BOOK,
            Category.CATEGORY,
            FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
            Publisher.PUBLISHER,
            Rent.RENT,
            Setting.SETTING,
            Users.USERS
        );
    }
}
