/*
 * This file is generated by jOOQ.
 */
package my.groupId.jooq.tables.records;


import java.time.LocalDateTime;

import my.groupId.jooq.tables.Book;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookRecord extends UpdatableRecordImpl<BookRecord> implements Record11<Long, String, Long, Long, Long, Integer, LocalDateTime, LocalDateTime, Long, Long, byte[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>library.book.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>library.book.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>library.book.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>library.book.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>library.book.authorId</code>.
     */
    public void setAuthorid(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>library.book.authorId</code>.
     */
    public Long getAuthorid() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>library.book.categoryId</code>.
     */
    public void setCategoryid(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>library.book.categoryId</code>.
     */
    public Long getCategoryid() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>library.book.publisherId</code>.
     */
    public void setPublisherid(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>library.book.publisherId</code>.
     */
    public Long getPublisherid() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>library.book.amount</code>.
     */
    public void setAmount(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>library.book.amount</code>.
     */
    public Integer getAmount() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>library.book.createdAt</code>.
     */
    public void setCreatedat(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>library.book.createdAt</code>.
     */
    public LocalDateTime getCreatedat() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>library.book.updatedAt</code>.
     */
    public void setUpdatedat(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>library.book.updatedAt</code>.
     */
    public LocalDateTime getUpdatedat() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>library.book.createdBy</code>.
     */
    public void setCreatedby(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>library.book.createdBy</code>.
     */
    public Long getCreatedby() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>library.book.updatedBy</code>.
     */
    public void setUpdatedby(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>library.book.updatedBy</code>.
     */
    public Long getUpdatedby() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>library.book.coverImg</code>.
     */
    public void setCoverimg(byte[] value) {
        set(10, value);
    }

    /**
     * Getter for <code>library.book.coverImg</code>.
     */
    public byte[] getCoverimg() {
        return (byte[]) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, String, Long, Long, Long, Integer, LocalDateTime, LocalDateTime, Long, Long, byte[]> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, String, Long, Long, Long, Integer, LocalDateTime, LocalDateTime, Long, Long, byte[]> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Book.BOOK.ID;
    }

    @Override
    public Field<String> field2() {
        return Book.BOOK.TITLE;
    }

    @Override
    public Field<Long> field3() {
        return Book.BOOK.AUTHORID;
    }

    @Override
    public Field<Long> field4() {
        return Book.BOOK.CATEGORYID;
    }

    @Override
    public Field<Long> field5() {
        return Book.BOOK.PUBLISHERID;
    }

    @Override
    public Field<Integer> field6() {
        return Book.BOOK.AMOUNT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Book.BOOK.CREATEDAT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Book.BOOK.UPDATEDAT;
    }

    @Override
    public Field<Long> field9() {
        return Book.BOOK.CREATEDBY;
    }

    @Override
    public Field<Long> field10() {
        return Book.BOOK.UPDATEDBY;
    }

    @Override
    public Field<byte[]> field11() {
        return Book.BOOK.COVERIMG;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public Long component3() {
        return getAuthorid();
    }

    @Override
    public Long component4() {
        return getCategoryid();
    }

    @Override
    public Long component5() {
        return getPublisherid();
    }

    @Override
    public Integer component6() {
        return getAmount();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedat();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedat();
    }

    @Override
    public Long component9() {
        return getCreatedby();
    }

    @Override
    public Long component10() {
        return getUpdatedby();
    }

    @Override
    public byte[] component11() {
        return getCoverimg();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public Long value3() {
        return getAuthorid();
    }

    @Override
    public Long value4() {
        return getCategoryid();
    }

    @Override
    public Long value5() {
        return getPublisherid();
    }

    @Override
    public Integer value6() {
        return getAmount();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedat();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedat();
    }

    @Override
    public Long value9() {
        return getCreatedby();
    }

    @Override
    public Long value10() {
        return getUpdatedby();
    }

    @Override
    public byte[] value11() {
        return getCoverimg();
    }

    @Override
    public BookRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public BookRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public BookRecord value3(Long value) {
        setAuthorid(value);
        return this;
    }

    @Override
    public BookRecord value4(Long value) {
        setCategoryid(value);
        return this;
    }

    @Override
    public BookRecord value5(Long value) {
        setPublisherid(value);
        return this;
    }

    @Override
    public BookRecord value6(Integer value) {
        setAmount(value);
        return this;
    }

    @Override
    public BookRecord value7(LocalDateTime value) {
        setCreatedat(value);
        return this;
    }

    @Override
    public BookRecord value8(LocalDateTime value) {
        setUpdatedat(value);
        return this;
    }

    @Override
    public BookRecord value9(Long value) {
        setCreatedby(value);
        return this;
    }

    @Override
    public BookRecord value10(Long value) {
        setUpdatedby(value);
        return this;
    }

    @Override
    public BookRecord value11(byte[] value) {
        setCoverimg(value);
        return this;
    }

    @Override
    public BookRecord values(Long value1, String value2, Long value3, Long value4, Long value5, Integer value6, LocalDateTime value7, LocalDateTime value8, Long value9, Long value10, byte[] value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookRecord
     */
    public BookRecord() {
        super(Book.BOOK);
    }

    /**
     * Create a detached, initialised BookRecord
     */
    public BookRecord(Long id, String title, Long authorid, Long categoryid, Long publisherid, Integer amount, LocalDateTime createdat, LocalDateTime updatedat, Long createdby, Long updatedby, byte[] coverimg) {
        super(Book.BOOK);

        setId(id);
        setTitle(title);
        setAuthorid(authorid);
        setCategoryid(categoryid);
        setPublisherid(publisherid);
        setAmount(amount);
        setCreatedat(createdat);
        setUpdatedat(updatedat);
        setCreatedby(createdby);
        setUpdatedby(updatedby);
        setCoverimg(coverimg);
    }
}
