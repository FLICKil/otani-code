/*
 * This file is generated by jOOQ.
 */
package my.groupId.jooq.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import my.groupId.jooq.tables.Setting;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SettingRecord extends UpdatableRecordImpl<SettingRecord> implements Record9<Long, Integer, Integer, String, BigDecimal, LocalDateTime, LocalDateTime, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>library.setting.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>library.setting.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>library.setting.userIssuedLimit</code>.
     */
    public void setUserissuedlimit(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>library.setting.userIssuedLimit</code>.
     */
    public Integer getUserissuedlimit() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>library.setting.bookReturnDay</code>.
     */
    public void setBookreturnday(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>library.setting.bookReturnDay</code>.
     */
    public Integer getBookreturnday() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>library.setting.currency</code>.
     */
    public void setCurrency(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>library.setting.currency</code>.
     */
    public String getCurrency() {
        return (String) get(3);
    }

    /**
     * Setter for <code>library.setting.oneDayFee</code>.
     */
    public void setOnedayfee(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>library.setting.oneDayFee</code>.
     */
    public BigDecimal getOnedayfee() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>library.setting.createdAt</code>.
     */
    public void setCreatedat(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>library.setting.createdAt</code>.
     */
    public LocalDateTime getCreatedat() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>library.setting.updatedAt</code>.
     */
    public void setUpdatedat(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>library.setting.updatedAt</code>.
     */
    public LocalDateTime getUpdatedat() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>library.setting.createdBy</code>.
     */
    public void setCreatedby(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>library.setting.createdBy</code>.
     */
    public Long getCreatedby() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>library.setting.updatedBy</code>.
     */
    public void setUpdatedby(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>library.setting.updatedBy</code>.
     */
    public Long getUpdatedby() {
        return (Long) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Integer, Integer, String, BigDecimal, LocalDateTime, LocalDateTime, Long, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, Integer, Integer, String, BigDecimal, LocalDateTime, LocalDateTime, Long, Long> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Setting.SETTING.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Setting.SETTING.USERISSUEDLIMIT;
    }

    @Override
    public Field<Integer> field3() {
        return Setting.SETTING.BOOKRETURNDAY;
    }

    @Override
    public Field<String> field4() {
        return Setting.SETTING.CURRENCY;
    }

    @Override
    public Field<BigDecimal> field5() {
        return Setting.SETTING.ONEDAYFEE;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Setting.SETTING.CREATEDAT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Setting.SETTING.UPDATEDAT;
    }

    @Override
    public Field<Long> field8() {
        return Setting.SETTING.CREATEDBY;
    }

    @Override
    public Field<Long> field9() {
        return Setting.SETTING.UPDATEDBY;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getUserissuedlimit();
    }

    @Override
    public Integer component3() {
        return getBookreturnday();
    }

    @Override
    public String component4() {
        return getCurrency();
    }

    @Override
    public BigDecimal component5() {
        return getOnedayfee();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedat();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdatedat();
    }

    @Override
    public Long component8() {
        return getCreatedby();
    }

    @Override
    public Long component9() {
        return getUpdatedby();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getUserissuedlimit();
    }

    @Override
    public Integer value3() {
        return getBookreturnday();
    }

    @Override
    public String value4() {
        return getCurrency();
    }

    @Override
    public BigDecimal value5() {
        return getOnedayfee();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedat();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdatedat();
    }

    @Override
    public Long value8() {
        return getCreatedby();
    }

    @Override
    public Long value9() {
        return getUpdatedby();
    }

    @Override
    public SettingRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SettingRecord value2(Integer value) {
        setUserissuedlimit(value);
        return this;
    }

    @Override
    public SettingRecord value3(Integer value) {
        setBookreturnday(value);
        return this;
    }

    @Override
    public SettingRecord value4(String value) {
        setCurrency(value);
        return this;
    }

    @Override
    public SettingRecord value5(BigDecimal value) {
        setOnedayfee(value);
        return this;
    }

    @Override
    public SettingRecord value6(LocalDateTime value) {
        setCreatedat(value);
        return this;
    }

    @Override
    public SettingRecord value7(LocalDateTime value) {
        setUpdatedat(value);
        return this;
    }

    @Override
    public SettingRecord value8(Long value) {
        setCreatedby(value);
        return this;
    }

    @Override
    public SettingRecord value9(Long value) {
        setUpdatedby(value);
        return this;
    }

    @Override
    public SettingRecord values(Long value1, Integer value2, Integer value3, String value4, BigDecimal value5, LocalDateTime value6, LocalDateTime value7, Long value8, Long value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SettingRecord
     */
    public SettingRecord() {
        super(Setting.SETTING);
    }

    /**
     * Create a detached, initialised SettingRecord
     */
    public SettingRecord(Long id, Integer userissuedlimit, Integer bookreturnday, String currency, BigDecimal onedayfee, LocalDateTime createdat, LocalDateTime updatedat, Long createdby, Long updatedby) {
        super(Setting.SETTING);

        setId(id);
        setUserissuedlimit(userissuedlimit);
        setBookreturnday(bookreturnday);
        setCurrency(currency);
        setOnedayfee(onedayfee);
        setCreatedat(createdat);
        setUpdatedat(updatedat);
        setCreatedby(createdby);
        setUpdatedby(updatedby);
    }
}
